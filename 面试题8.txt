
1. 简述Linux系统的启动过程
	1).加载BIOS的硬件信息，获取第一个启动设备
	2).读取第一个启动设备MBR的引导加载程序(grub)的启动信息
	3).加载核心操作系统的核心信息，核心开始解压缩，并尝试驱动所有的硬件设备
	4).核心执行init程序，并获取默认的运行信息
	5).init程序执行/etc/rc.d/rc.sysinit文件
	6).启动核心的外挂模块
	7).init执行运行的各个批处理文件(scripts)
	8).init执行/etc/rc.d/rc.local
	9).执行/bin/login程序，等待用户登录
	10).登录之后开始以Shell控制主机


2. 用vi命令编辑文件,如何跳转到末行、首行、行首、行末，如何在光标下一行插入，如何复制五行，删除10行，查找old的字符、把old替换为new
跳转到末行:G
跳转到首行:gg
跳转到行首:^
跳转到行末:$
在光标下一行插入:o
复制5行:5yy|:10,15y|:/^bin/,/^halt/y
删除10行:10dd
查看old字符:/old
把old替换成new: :%s/old/new/g

3. 当前test.txt所属的用户为root，用户组为abc，请将test.txt的用户组修改为abc,用户为root,如何操作。

chown abc.root test.txt

4. 如何查看selinux及防火墙状态，临时、永久关闭selinux及防火墙，如何操作
SELINU：
	查看是否开启: getenforce 或者sestatus
	临时禁用:setenforce 0
	永久禁用:sed -i.bak 's#SELINUX=enforcing#SELINUX=disabled#g' /etc/selinux/config
iptables：
	查看是否开启:
		/etc/init.d/iptables status 或者 iptables -vnL
	临时禁用:
		iptables -F
	永久禁用
		chkconfig iptables off
		chkconfig --list iptables


5. /var/www/html/是网站的发布目录,如何每天凌晨0点30对其进行自动备份,保留最近七天的文件,请写出步骤

#########################################################################
# File Name: webbal.sh
# Author: qizekai
# mail: qizekai@aliyun.com
# Created Time: Thu 22 Jun 2017 07:46:57 PM CST
#########################################################################
#!/bin/bash
webdir=/home/www/
bakpostion=/tmp/
bakname=${bakpostion}webbak_`date +%F`.tar.gz
delname=${bakpostion}webbak_`date +%F -d '-8 day'`.tar.gz

#check file
[ -d $webdir ]  ||  exit 1
[ -f $bakname ] &&  exit 2
[ -f $delname ] &&  rm -rf $delname 

#bak web
tar -zcvf $bakname $webdir && echo "The bak succ!" && exit 3


6. 如何查看占用端口8080的进程
	方法一:
		lsof -i:8080
	方法二:
		ss -tnlp|grep 8080
	方法三:
		netstat -tnlp|grep 8080


7. 实时跟踪nohup.out日志的变化如何操作
	tail -f nohup.out

8.使用sed命令把文件的空格和tab全部删除
	cat seddlt | sed 's/[ \t]*$//g'

9. 通过Apache访问日志access.log统计IP和每个地址访问的次数，按访问量列出前10名，日志格式：192.168.1.247 - -[02/Jul/2010:23:44:59 +800] "GET/HTTP1.1" 200 19

统计ip出现次数:access_log
    cat access.log |awk '{print $1}'|uniq -c|sort -nr|head -10
    cat access_log|awk '{state[$1]++}END{for(i in state) { print i,state[i]}}'|sort -nr -k2|head -n 10

10. MySQL忘记密码该如何操作

	vim /etc/init.d/mysqld
	在启动选项里面添加:--skip-grant-tables --skip-networking
	/etc/init.d/mysqld restart

登录修改:
	 mysql
	 UPDATE mysql.user SET Password=PASSWORD('qikais')  WHERE User='root' AND Host='127.0.0.1';
	 UPDATE mysql.user SET Password=PASSWORD('qikais')  WHERE User='root' AND Host='localhost';
	 FLUSH PRIVILEGES;
	 exit

测试登录:
	mysql -u root  -pqikais

注意:测试成功之后,进入mysql的启动选项,注释那两个选项,再次重启


11.简述你所了解的分布式文件系统及其差异
MogileFS VS FastDFS

[ 类似点 ]

1. 架构都比较雷同，都具备tracker和storage两个部分的cluster架构，可以都很方便进行横向扩张。
2. 对于storageServer方面一旦有某机器宕机，硬盘损坏情况，都能自动完成修复功能。
3. 架构设计都无单点失败问题，cluster中服务器都无需采用raid服务，避免出现类似hadoop设计的cluster中前端mapreduce宕机，整个系统失效的问题
4. 文件存储都不能对大文件拆分（hadoop可以实现），所以如果单个文件超过一台存储物理机的存储空间，就不能使用此系统存储
5. 文件系统的存储格式都不是原文存储，就算你登陆到文件服务器也无法获取到系统中的数据，必须经过一定的接口才能获取

[ 不同点 ]

1. F架构中不具备数据库，M中必须使用数据库来存储每一个文件的地址。但是F架构中在每次上传之后会返回一个相对地址，此地址需自己完成写入某个数据源中进行保存，在下一次读取的时候就能找到此文件对于文件系统中的位置。也就是说F中的数据是独立于文件系统之外，可以自己来设计的，M是包含到文件系统之中。
2. F是由C开发，M是有Perl开发，性能方面F占优
3. F直接使用socket通信方式，相对于M的HTTP方式，效率更高。并且F使用sendfile传输文件，采用了内存零拷贝，系统开销更小，文件传输效率更高。
4. F从V1.14开始支持相同文件内容只保存一份，这样可以节省存储空间，提高文件访问性能，M不具备这个功能
5. F中有Group的概念，每个Group的就是一个存储的cluster，一个cluster每个存储服务器都互相复制数据。M中没有Group，但引入class来对不同的文件区分存储的方式。例如附录01中的配置，不同文件可以在upload操作的选择使用哪一种class，就可以采用不一样的备份数量控制。
6. F是国人开发出来，有问题可以直接问作者（QQ群：212801927），M想找到相关资料比较麻烦

12.请将/usr/local/test目录下的大于100K文件转移到tmp目录下

	find  /usr/local/test/ -type f -size +10k | xargs mv {} /tmp

13.简述你所知道的数据库缓存软件及其差异
	memcached && redis

1、 Redis和Memcache都是将数据存放在内存中,都是内存数据库。不过memcache还可用于缓存其他东西，例如图片、视频等等。
2、 数据类型--Memcache数据结构单一,redis数据结构丰富
3、 虚拟内存--Redis当物理内存用完时,可以将一些很久没用到的value交换到磁盘
4、 持久化策略--redis具备持久化策略,可以有效保证数据不丢失,而memcache数据只可以充当缓存使用,不具备持久化功能
5、 分布式--都可以实现分布式存储是数据
6、 存储数据安全--memcache挂掉后，数据没了；redis可以定期保存到磁盘（持久化）
7、 灾难恢复--memcache挂掉后，数据不可恢复; redis数据丢失后可以通过aof恢复

14.简述下nginx/lvs/haproxy优缺点

nginx优点:
	1、工作在网络的7层之上，可以针对http应用做一些分流的策略，比如针对域名、目录结构，它的正则规则比HAProxy更为强大和灵活，这也是它目前广泛流行的主要原因之一，Nginx单凭这点可利用的场合就远多于LVS了。
	2、Nginx对网络稳定性的依赖非常小，理论上能ping通就就能进行负载功能，这个也是它的优势之一；相反LVS对网络稳定性依赖比较大，这点本人深有体会；
	3、Nginx安装和配置比较简单，测试起来比较方便，它基本能把错误用日志打印出来。LVS的配置、测试就要花比较长的时间了，LVS对网络依赖比较大。
	3、可以承担高负载压力且稳定，在硬件不差的情况下一般能支撑几万次的并发量，负载度比LVS相对小些。
	4、Nginx可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等等，并且会把返回错误的请求重新提交到另一个节点，不过其中缺点就是不支持url来检测。比如用户正在上传一个文件，而处理该上传的节点刚好在上传过程中出现故障，Nginx会把上传切到另一台服务器重新处理，而LVS就直接断掉了，如果是上传一个很大的文件或者很重要的文件的话，用户可能会因此而不满。
	5、Nginx不仅仅是一款优秀的负载均衡器/反向代理软件，它同时也是功能强大的Web应用服务器。LNMP也是近几年非常流行的web架构，在高流量的环境中稳定性也很好。
	6、Nginx现在作为Web反向加速缓存越来越成熟了，速度比传统的Squid服务器更快，可以考虑用其作为反向代理加速器。
	7、Nginx可作为中层反向代理使用，这一层面Nginx基本上无对手，唯一可以对比Nginx的就只有lighttpd了，不过lighttpd目前还没有做到Nginx完全的功能，配置也不那么清晰易读，社区资料也远远没Nginx活跃。
	8、Nginx也可作为静态网页和图片服务器，这方面的性能也无对手。还有Nginx社区非常活跃，第三方模块也很多。
缺点:
	1、Nginx仅能支持http、https和Email协议，这样就在适用范围上面小些，这个是它的缺点。
	2、对后端服务器的健康检查，只支持通过端口来检测，不支持通过url来检测。不支持Session的直接保持，但能通过ip_hash来解决。

lvs优点:
	1、抗负载能力强、是工作在网络4层之上仅作分发之用，没有流量的产生，这个特点也决定了它在负载均衡软件里的性能最强的，对内存和cpu资源消耗比较低。
	2、配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，所以并不需要太多接触，大大减少了人为出错的几率。
	3、工作稳定，因为其本身抗负载能力很强，自身有完整的双机热备方案，如LVS+Keepalived，不过我们在项目实施中用得最多的还是LVS/DR+Keepalived。
	4、无流量，LVS只分发请求，而流量并不从它本身出去，这点保证了均衡器IO的性能不会收到大流量的影响。
	5、应用范围比较广，因为LVS工作在4层，所以它几乎可以对所有应用做负载均衡，包括http、数据库、在线聊天室等等。
缺点:
	1、软件本身不支持正则表达式处理，不能做动静分离；而现在许多网站在这方面都有较强的需求，这个是Nginx/HAProxy+Keepalived的优势所在。
	2、如果是网站应用比较庞大的话，LVS/DR+Keepalived实施起来就比较复杂了，特别后面有Windows Server的机器的话，如果实施及配置还有维护过程就比较复杂了，相对而言，Nginx/HAProxy+Keepalived就简单多了。

HAProxy优点:
1、HAProxy也是支持虚拟主机的。
2、HAProxy的优点能够补充Nginx的一些缺点，比如支持Session的保持，Cookie的引导；同时支持通过获取指定的url来检测后端服务器的状态。
3、HAProxy跟LVS类似，本身就只是一款负载均衡软件；单纯从效率上来讲HAProxy会比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的。
4、HAProxy支持TCP协议的负载均衡转发，可以对MySQL读进行负载均衡，对后端的MySQL节点进行检测和负载均衡，大家可以用LVS+Keepalived对MySQL主从做负载均衡。
5、HAProxy负载均衡策略非常多，HAProxy的负载均衡算法现在具体有如下8种：
① roundrobin，表示简单的轮询，这个不多说，这个是负载均衡基本都具备的；
② static-rr，表示根据权重，建议关注；
③ leastconn，表示最少连接者先处理，建议关注；
④ source，表示根据请求源IP，这个跟Nginx的IP_hash机制类似，我们用其作为解决session问题的一种方法，建议关注；
⑤ ri，表示根据请求的URI；
⑥ rl_param，表示根据请求的URl参数’balance url_param’ requires an URL parameter name；
⑦ hdr(name)，表示根据HTTP请求头来锁定每一次HTTP请求；
⑧ rdp-cookie(name)，表示根据据cookie(name)来锁定并哈希每一次TCP请求。





15.如何在普通用户下,使用nginx启动80端口
方法一：
	sudo配置用户权限
方法二:
	需要提前在root下修改文件权限
	修改nginx的启动用户为当前普通用户


16. 现在开发需求,数据库中有一张用户表userid_info,由于数据量大现需要分成10张表,userid_info0...userid_info9,并将用户表中的数据userid列以10取模,分到者10张表中，如何实现

1.按照数据量区分,每张表区分固定数据
	例如:1000w数据,可以每张表100w数据,这种方式易拓展,但是数据量比较大的时候,表分的太多,维护不易

2.按照取模分表,固定区分表,不易拓展

php实现:
<?php

function hash_table($table_name, $user_id, $total)
{
	return $table_name . '_' . (($user_id % $total) + 1);
}
 
//测试实现
for ($i=11;$i<=99;$i++){
 	echo hash_table("artice",$i,10).PHP_EOL;
}


shell实现:
#!/bin/bash
hash_table(){
	echo $1$(($2%10))
}

hash_table article 11 10


17. 请用shell实现,打印乘法口诀表

#!/bin/bash
for((i=1;i<=9;i++))
do
    for ((j=1;j<=$i;j++))
    do  
        let n=$i*$j
        echo -n  "$i*$j=$n "
    done
    echo
done  


18. 请简述下Linux运维工程师的职责
1.操作系统状态监控
2.操作系统故障排除
3.配置变更
4.数据备份
5.部署环境


